map c copy
map y clear
map x cut

cmd make %{{
    printf "Enter name: "
    read name
    if [[ "$name" == */ ]]; then
        mkdir -p "${name%/}"  # Remove trailing slash and create a directory
    elif [[ "$name" == *.* ]]; then
        touch "$name"  # If it contains a dot, create a file
    else
        echo "Invalid input. Use 'name/' for directories or 'name.ext' for files."
    fi
}}
map a make

cmd trash %{{
    set -f
    printf "Are you sure you want to trash %s ? (y/n): " $(basename -a -- $fx)
    read confirm
    if [[ "$confirm" =~ ^[Yy]$ ]] || [[ "$confirm" = "" ]]; then
        if command -v gio >/dev/null 2>&1; then
            gio trash $fx
    	else
            mkdir -p ~/.trash
            mv -- $fx ~/.trash
        fi
    fi
}}
map d trash

cmd trash-restore %{{
    set -f
    ft="$(basename -a -- $fx | sed 's|^|trash:///|')"
    gio trash --restore $ft
    printf 'restored'
    printf ' %s' $(basename -a -- $fx)
}}


cmd fzf_search ${{
    cmd="rg --column --line-number --no-heading --color=always --smart-case"
    fzf --ansi --disabled --layout=reverse --header="Search in files" --delimiter=: \
        --bind="start:reload([ -n {q} ] && $cmd -- {q} || true)" \
        --bind="change:reload([ -n {q} ] && $cmd -- {q} || true)" \
        --bind='enter:become(lf -remote "send $id select \"$(printf "%s" {1} | sed '\''s/\\/\\\\/g;s/"/\\"/g'\'')\"")' \
        --preview='cat -- {1}' # Use your favorite previewer here (bat, source-highlight, etc.), for example:
        #--preview-window='+{2}-/2' \
        #--preview='bat --color=always --highlight-line={2} -- {1}'
        # Alternatively you can even use the same previewer you've configured for lf
        #--preview='~/.config/lf/cleaner; ~/.config/lf/previewer {1} "$FZF_PREVIEW_COLUMNS" "$FZF_PREVIEW_LINES" "$FZF_PREVIEW_LEFT" "$FZF_PREVIEW_TOP"'
}}
map sg :fzf_search

cmd fzf_jump ${{
    res="$(find . | fzf --reverse --header="Jump to location")"
    if [ -n "$res" ]; then
        if [ -d "$res" ]; then
            cmd="cd"
        else
            cmd="select"
        fi
        res="$(printf '%s' "$res" | sed 's/\\/\\\\/g;s/"/\\"/g')"
        lf -remote "send $id $cmd \"$res\""
    fi
}}
map sf :fzf_jump


set icons true
set sixel true
set previewer ctpv
set cleaner ctpvclear
&ctpv -s $id
&ctpvquit $id
